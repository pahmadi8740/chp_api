# Default values for chp-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
appname: chp-api

image:
  repository: 853771734544.dkr.ecr.us-east-1.amazonaws.com/translator-ea-chp-api
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "BUILD_VERSION"
  nginxTag: "BUILD_VERSION-nginx"
  staticfsTag: "BUILD_VERSION-staticfs"

nameOverride: ""
fullnameOverride: ""

# django applicaiton configuration
app:
  debug: "0"
  secret_key: ""
  djangoCSRFTrustedOrigins: ""
  djangoAllowedHosts: ""
  djangoSettingsModule: "chp_api.settings"
  djangoSuperuserUsername: "chp_admin"
  djangoSuperuserPassword: ""
  djangoSuperuserEmail: "chp_admin@chp.com"
  staticfsFolder: "/var/www"
  staticfsDebug: "0"
  OtelPythonLoggingAutoInstrumentationEnabled: "true"
  OtelTracesExporter: "jaeger"
  OtelExporterJaegerAgentHost: "jaeger-otel-agent.sri"
  OtelExporterJaegerAgentPort: "6831"

# database connection information
db: 
  type: "postgres"
  engine: "django.db.backends.postgresql"
  host: ""
  port: "5432"
  database: ""
  username: ""
  password: ""

podAnnotations: {}

podSecurityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

securityContext: 
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000

securityContextNginx:
  runAsUser: 0
  runAsGroup: 0
  #readOnlyRootFilesystem: true

service:
  type: NodePort
  port: 80

ingress:
  enabled: true
  annotations: 
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "360"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "360"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "360"
  hosts:
    - host: chp-api.ci.transltr.io
      paths:
        - path: /
          pathType: ImplementationSpecific
     
tolerations: 
  - key: "transltr"
    value: "chp"
    operator: "Equal"
    effect: "NoSchedule"

affinity: 
  # this ensures only ONE pod will run on each node
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: application
            operator: In
            values:
            - chp
        topologyKey: "kubernetes.io/hostname"
  # this ensures pod only runs on node with label application=managed-app
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
          - key: application
            operator: In
            values:
            - chp
